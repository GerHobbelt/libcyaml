From 4922a9a5e668bcb39b2c9b03f922b605e18b55e1 Mon Sep 17 00:00:00 2001
From: Michael Drake <tlsa@netsurf-browser.org>
Date: Sun, 26 Apr 2020 21:18:46 +0100
Subject: [PATCH] Data: Use memcpy for data read / write.

---

commit 4922a9a5e668bcb39b2c9b03f922b605e18b55e1 upstream

 src/data.h | 41 +++++++----------------------------------
 1 file changed, 7 insertions(+), 34 deletions(-)

diff --git a/src/data.h b/src/data.h
index f85d08e..b511b83 100644
--- a/src/data.h
+++ b/src/data.h
@@ -1,7 +1,7 @@
 /*
  * SPDX-License-Identifier: ISC
  *
- * Copyright (C) 2017 Michael Drake <tlsa@netsurf-browser.org>
+ * Copyright (C) 2017-2020 Michael Drake <tlsa@netsurf-browser.org>
  */
 
 /**
@@ -28,26 +28,14 @@ static inline cyaml_err_t cyaml_data_write(
 		uint64_t entry_size,
 		uint8_t *data_tgt)
 {
-	if (entry_size == 0) {
-		return CYAML_ERR_INVALID_DATA_SIZE;
-	}
+	const uint8_t *value_bytes = (uint8_t *)&value;
 
-	data_tgt += entry_size - 1;
-
-	switch (entry_size) {
-	case 8: *data_tgt-- = (uint8_t)(value >> 56) & 0xff; /* Fall through. */
-	case 7: *data_tgt-- = (uint8_t)(value >> 48) & 0xff; /* Fall through. */
-	case 6: *data_tgt-- = (uint8_t)(value >> 40) & 0xff; /* Fall through. */
-	case 5: *data_tgt-- = (uint8_t)(value >> 32) & 0xff; /* Fall through. */
-	case 4: *data_tgt-- = (uint8_t)(value >> 24) & 0xff; /* Fall through. */
-	case 3: *data_tgt-- = (uint8_t)(value >> 16) & 0xff; /* Fall through. */
-	case 2: *data_tgt-- = (uint8_t)(value >>  8) & 0xff; /* Fall through. */
-	case 1: *data_tgt-- = (uint8_t)(value >>  0) & 0xff;
-		break;
-	default:
+	if (entry_size == 0 || entry_size > sizeof(value)) {
 		return CYAML_ERR_INVALID_DATA_SIZE;
 	}
 
+	memcpy(data_tgt, value_bytes, entry_size);
+
 	return CYAML_OK;
 }
 
@@ -91,27 +79,12 @@ static inline uint64_t cyaml_data_read(
 {
 	uint64_t ret = 0;
 
-	if (entry_size == 0) {
+	if (entry_size == 0 || entry_size > sizeof(ret)) {
 		*error_out = CYAML_ERR_INVALID_DATA_SIZE;
 		return ret;
 	}
 
-	data += entry_size - 1;
-
-	switch (entry_size) {
-	case 8: ret |= ((uint64_t)(*data-- & 0xff)) << 56; /* Fall through. */
-	case 7: ret |= ((uint64_t)(*data-- & 0xff)) << 48; /* Fall through. */
-	case 6: ret |= ((uint64_t)(*data-- & 0xff)) << 40; /* Fall through. */
-	case 5: ret |= ((uint64_t)(*data-- & 0xff)) << 32; /* Fall through. */
-	case 4: ret |= ((uint64_t)(*data-- & 0xff)) << 24; /* Fall through. */
-	case 3: ret |= ((uint64_t)(*data-- & 0xff)) << 16; /* Fall through. */
-	case 2: ret |= ((uint64_t)(*data-- & 0xff)) <<  8; /* Fall through. */
-	case 1: ret |= ((uint64_t)(*data-- & 0xff)) <<  0;
-		break;
-	default:
-		*error_out = CYAML_ERR_INVALID_DATA_SIZE;
-		return ret;
-	}
+	memcpy(&ret, data, entry_size);
 
 	*error_out = CYAML_OK;
 	return ret;
-- 
2.20.1

